@page "/slicing"
<h3>Slicer</h3>

@if (_loading)
{
    <Loader Center="true" Message="Preparing configurator" />
}

<div>
    Send one STL to try to convert like in the app, and download the GCODE.

    Note: The slicing process is temporary only available for <b> CS_Ultimaker2plus</b>

</div>

@if (!_loading)
{
    <EditForm Model="slicerForm" OnValidSubmit="Submit">
        <div class="input-group row my-1">
            <div class="custom-file">
                <InputFile @bind-Value="slicerForm.STL"
                       OnChange="@((InputFileChangeEventArgs e) => {slicerForm.STL = e.File;})"
                       type="file" class="custom-file-input" id="inputGroupFile04" aria-describedby="inputGroupFileAddon04" />
                <label class="custom-file-label" for="inputGroupFile04">@(slicerForm.STL == null? "Choose  file":slicerForm.STL.Name)</label>
            </div>
            <ValidationMessage For="() => slicerForm.STL" />
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Material</label>
            <div class="col-sm-10">
                <InputSelect class="form-control" @bind-Value="slicerForm.Material" @onchange="() => {slicerForm.Print = default(Guid); 
                                                                                                                            StateHasChanged();}">
                    @foreach (var mat in _materials)
                    {
                    <option value="@mat.Id">@mat.Name</option>
                    }
            </InputSelect>
        </div>
        <ValidationMessage For="() => slicerForm.Material" />
    </div>
    @if (slicerForm.Material != Guid.Empty)
        {
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Print</label>
                <div class="col-sm-10">
                    <InputSelect class="form-control" @bind-Value="slicerForm.Print">
                        <option value="@Guid.Empty"></option>
                        @foreach (var print in _filaments.Find(f => f.MaterialFK == slicerForm.Material).CompatiblePrints)
                        {
                    <option value="@print.Id">@print.Name</option>
                        }
            </InputSelect>
        </div>
        <ValidationMessage For="() => slicerForm.Print" />
    </div>
        }

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Activate supports</label>
            <div class="col-sm-10">
                <InputSelect class="form-control" @bind-Value="slicerForm.Support">
                    <option value="No">No</option>
                    <option value="Yes">Yes</option>
            </InputSelect>
        </div>
        <ValidationMessage For="() => slicerForm.Support" />
    </div>

    <button class="btn btn-outline-success" type="submit">Convert</button>
</EditForm>
}
